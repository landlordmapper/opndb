from opndb.types.base import WorkflowConfigs


class Dirs:
    """Directory names for workflow data file storage, corresponding to classes."""
    RAW: str = "raw"
    GEOCODIO: str = "geocodio"
    GCD_PARTIALS: str = "partials"
    ANALYSIS: str = "analysis"
    PROCESSED: str = "processed"
    SUMMARY_STATS: str = "summary_stats"
    FINAL_OUTPUTS: str = "final_outputs"

class FileNames:
    """Centralized file naming constants organized by directory structure."""
    @classmethod
    def get_raw_filename_ext(cls, filename: str, config: WorkflowConfigs) -> str:
        """Sets file extension on file names. Allows for flexibility in file format of data inputs"""
        return f"{filename}.{config['load_ext']}"

class Root(FileNames):
    CONFIGS: str = "configs.json"

class Raw(FileNames):
    """Raw input files, saved after running initial validation checks."""
    PROPS_TAXPAYERS: str = "props_taxpayers"
    CORPS: str = "corps"
    LLCS: str = "llcs"
    CLASS_CODES: str = "class_codes"

class Geocodio(FileNames):
    GCD_VALIDATED: str = "gcd_validated"
    GCD_UNVALIDATED: str = "gcd_unvalidated"
    GCD_FAILED: str = "gcd_failed"

class Analysis(FileNames):
    """Analysis files generated by the workflow and used for manual research & input."""
    FREQUENT_TAX_NAMES: str = "frequent_tax_names"
    FIXING_TAX_NAMES: str = "fixing_tax_names"
    FIXING_ADDRS: str = "fixing_addrs"
    ADDRESS_ANALYSIS: str = "address_analysis"

class Processed(FileNames):
    """Datasets generated by different stages of the workflow."""
    TAXPAYER_RECORDS: str = "taxpayer_records"
    PROPERTIES: str = "properties"
    PROPERTIES_RENTALS: str = "properties_rentals"
    CORPS: str = "corps"
    LLCS: str = "llcs"
    CLASS_CODES: str = "class_codes"

    VALIDATED_ADDRS: str = "validated_addrs"
    UNVALIDATED_ADDRS: str = "unvalidated_addrs"

    TAXPAYER_RECORDS_MERGED: str = "taxpayer_records_merged"
    CORPS_MERGED: str = "corps_merged"
    LLCS_MERGED: str = "llcs_merged"

    TAXPAYERS_FIXED: str = "taxpayers_fixed"
    TAXPAYERS_SUBSETTED: str = "taxpayers_subsetted"
    TAXPAYERS_PREPPED: str = "taxpayers_prepped"
    TAXPAYERS_STRING_MATCHED: str = "taxpayers_string_matched"
    TAXPAYERS_NETWORKED: str = "taxpayers_networked"

class SummaryStats(FileNames):
    """Summary statistics for each stage of the workflow."""
    pass

class FinalOutputs(FileNames):
    """Final datasets."""
    pass
